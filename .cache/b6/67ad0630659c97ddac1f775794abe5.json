{"id":"DmO9","dependencies":[{"name":"/Users/thanhto/Documents/repository/others/Thomas notes/frontend/package.json","includedInParent":true,"mtime":1602861873776},{"name":"/Users/thanhto/Documents/repository/others/Thomas notes/frontend/node_modules/katex/package.json","includedInParent":true,"mtime":1595931929622},{"name":"./Parser","loc":{"line":6,"column":21},"parent":"/Users/thanhto/Documents/repository/others/Thomas notes/frontend/node_modules/katex/src/parseTree.js","resolved":"/Users/thanhto/Documents/repository/others/Thomas notes/frontend/node_modules/katex/src/Parser.js"}],"generated":{"js":"var r=require(\"./Parser\"),e=function(e,n){return new r(e,n).parse()};module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/katex/src/parseTree.js","original":{"line":6,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":6,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":6,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":6,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":11,"column":0},"generated":{"line":1,"column":26}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":11,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":11,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":11,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":14,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":12,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":12,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":12,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":12,"column":0},"generated":{"line":1,"column":57}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":14,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":17,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":17,"column":0},"generated":{"line":1,"column":76}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":17,"column":0},"generated":{"line":1,"column":84}}],"sources":{"../node_modules/katex/src/parseTree.js":"/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\nvar Parser = require(\"./Parser\");\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function(toParse, settings) {\n    var parser = new Parser(toParse, settings);\n\n    return parser.parse();\n};\n\nmodule.exports = parseTree;\n"},"lineCount":null}},"error":null,"hash":"c702950e5b1662e7a81084cc29b505dd","cacheData":{"env":{}}}